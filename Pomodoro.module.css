class HierarchyLevelFeed(Feed):
    def __init__(self):
        Feed.__init__(self)
        config = Configurations()
        self._sds_hierarchy_feed_attributes_config = config.get_sds_hierarchylevel_attributes()

    def _hierarchy_feed_content(self, hierarchy_data: List[Dict[str, any]], feed_name: str):
        if "attributes" not in self._sds_hierarchy_feed_attributes_config:
            raise Exception("Did not find attributes to create hierarchy feed.")

        headers = self._sds_hierarchy_feed_attributes_config["attributes"]
        headers = headers.split(",")

        # Initialize structured output for levels
        hierarchy_feed_outputs = []

        # Iterate through hierarchy data
        for hierarchy in hierarchy_data:
            curr_hierarchy_info = {
                f"{header}_id": str(hierarchy.get(header, {}).get('id', '')) if hierarchy.get(header) else ''
                for header in headers
            }
            curr_hierarchy_info.update({
                f"{header}_name": str(hierarchy.get(header, {}).get('name', '')) if hierarchy.get(header) else ''
                for header in headers
            })
            hierarchy_feed_outputs.append(curr_hierarchy_info)

        return self._create_feed_file(headers, hierarchy_feed_outputs, feed_name)

    def feed(self, hierarchy_data):
        feed_name = self._feed_name(sds_entity="hierarchylevel_feed", is_json=False)
        feed_file_content = self._hierarchy_feed_content(hierarchy_data, feed_name)
        self._save(feed_name, content=feed_file_content)
        return feed_name