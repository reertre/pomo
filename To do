from utils import configure_logging, System, SystemFeed, AliasFeed, FortInputFeedLog, Configurations
from datetime import datetime

logger = configure_logging("default_system")

def main() -> None:
    fortinputfeedlog = FortInputFeedLog()
    system_api = System()

    # Initial status for checking
    P_STATUS = "Checking"
    logger.info("Checking the status for system snaps")

    # Fetch all active system data
    all_system_data = system_api.get_all_active()

    # Determine if snap data is available
    if all_system_data:
        P_STATUS = "Available"  # Snap is available in the API
        logger.info("Snap is available in the API")
    else:
        P_STATUS = "Not Available"  # Snap not present in the API
        logger.warning("Snap is NOT available in the API")

    # Add log entry for status
    fortinputfeedlog.add_log(
        P_FILE_TYPE="SDS(default_system)",
        P_STATUS=P_STATUS,
        P_LOAD_MESSAGE="Checking System snaps",
        P_COB_DATE=datetime.now().strftime("%d-%b-%y")
    )

    # Proceed only if P_STATUS is Available
    if P_STATUS == "Available":
        aliasFeed = AliasFeed()
        alias_feed_name = aliasFeed.feed(all_system_data)

        # Add further logs
        config = Configurations()
        snap_details = config.get_current_snap()
        sds_region = snap_details["sds_system_snaps"] if "sds_system_snaps" in snap_details else None
        sds_snap_date = snap_details["snap_date"] if "snap_date" in snap_details else None

        logger.info(f"Region provided is {sds_region}")
        logger.info(f"Snap date provided is {sds_snap_date}")

        cob_log = datetime.strptime(sds_snap_date, "%Y-%m-%d").strftime("%d-%b-%y") if sds_snap_date else "N/A"

        fortinputfeedlog.add_log(
            P_FILE_TYPE="SDS(default_system)",
            P_STATUS=P_STATUS,
            P_LOAD_MESSAGE=f"Checking System snaps for {alias_feed_name} region for cob date {cob_log}",
            P_COB_DATE=cob_log
        )

        print(f"Alias Feed Name: {alias_feed_name}")
    else:
        logger.info("Skipping feed generation due to missing snap data.")

    logger.info("Process Completed.")


if __name__ == "__main__":
    main()